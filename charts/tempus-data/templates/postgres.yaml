#
# Copyright © 2016-2018 The Thingsboard Authors
# Modifications © 2017-2018 Hashmap, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: v1
kind: Service
metadata:
  name: {{ include "tempus-data.fullname" . }}-{{ .Values.postgresql.name }}
  labels:
    app: {{ .Values.postgresql.name }}
spec:
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
    protocol: TCP
  selector:
    app: {{ .Values.postgresql.name }}
---
apiVersion: "apps/v1beta1"
kind: StatefulSet
metadata:
  name: {{ include "tempus-data.fullname" . }}-{{ .Values.postgresql.name }}
spec:
  serviceName: {{ include "tempus-data.fullname" . }}-{{ .Values.postgresql.name }}
  replicas: {{ .Values.postgresql.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgresql.name }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - {{ .Values.postgresql.name }}
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: {{ include "tempus-data.fullname" . }}-{{ .Values.postgresql.name }}
        image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
        imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
        ports:
        - name: postgresql
          containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.postgresDatabase }}
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.postgresUser }}
          # Required for pg_isready in the health probes.
        - name: PGUSER
          value: {{ .Values.postgresql.postgresUser }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgresql.postgresPassword }}
        - name: PGDATA
          value: {{ .Values.postgresql.persistence.mountPath }}
        - name: POD_IP
          valueFrom: { fieldRef: { fieldPath: status.podIP } }
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: {{ .Values.postgresql.probes.liveness.initialDelay }}
          timeoutSeconds: {{ .Values.postgresql.probes.liveness.timeoutSeconds }}
          failureThreshold: {{ .Values.postgresql.probes.liveness.failureThreshold }}
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: {{ .Values.postgresql.probes.readiness.initialDelay }}
          timeoutSeconds: {{ .Values.postgresql.probes.readiness.timeoutSeconds }}
          periodSeconds: {{ .Values.postgresql.probes.readiness.periodSeconds }}
        volumeMounts:
        - name: {{ .Values.postgresql.persistence.name }}
          mountPath: {{ .Values.postgresql.persistence.mountPath }}
          subPath: {{ .Values.postgresql.persistence.subPath }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.postgresql.persistence.name }}
      annotations:
        volume.beta.kubernetes.io/storage-class: {{ .Values.storageClass.name }}
    spec:
      accessModes: [ {{ .Values.postgresql.persistence.accessMode }} ]
      resources:
        requests:
          storage: {{ .Values.postgresql.persistence.size }}