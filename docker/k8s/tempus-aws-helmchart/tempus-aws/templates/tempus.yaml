#
# Copyright © 2016-2018 The Thingsboard Authors
# Modifications © 2017-2018 Hashmap, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

kind: Service
apiVersion: v1
metadata:
  name: tempus-svc
  labels:
    app: tempus
spec:
  type: NodePort
  selector:
    app: tempus
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      name: https
    - protocol: TCP
      port: 1883
      targetPort: 1883
      name: mqtt
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: tempus-budget
spec:
  selector:
    matchLabels:
      app: tempus
  minAvailable: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tempus-config
data:
  zookeeper.enabled: "true"
  zookeeper.url: "zk-cs:2181"
  cassandra.url: "cassandra-headless:9042"
  cassandra.host: "cassandra-headless"
  cassandra.port: "9042"
  database.type: "cassandra"
  postgres.host: "postgres"
  postgres.port: "5432"
  schema.data: "false"
  demo.data: "false"
  mqtt.address: "0.0.0.0"
  mqtt.port: "1883"
  coap.address: "0.0.0.0"
  coap.port: "5683"
  spark.path: "/tmp"
  http.port: "8080"
  identity.base.url: "http://{{ .Values.identity.name }}:{{ .Values.identity.service.port }}/uaa"
  metadata.base.url: "http://{{ .Values.metadata.name }}:{{ .Values.metadata.service.port }}/api"
  spark.jars.bucket: "tempus-spark-jars"
  computation.location: "http://s3fs"
---
apiVersion: "apps/v1beta1"
kind: StatefulSet
metadata:
  name: tempus
spec:
  selector:
    matchLabels:
      app: tempus
  serviceName: tempus
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: tempus
    spec:
      serviceAccountName: tempus
      containers:
      - name: tempus
        image: hashmapinc/tempus:dev
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: ui
        - containerPort: 1883
          name: mqtt
        - containerPort: 5683
          protocol: UDP
          name: coap
        - containerPort: 9001
          name: rpc
        - containerPort: 9999
          name: tempus-port
        env:
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://postgresql:5432/identity"
        - name : SPRING_DATASOURCE_USERNAME
          value: "identity"
        - name : SPRING_DATASOURCE_PASSWORD
          value: "identity"
        - name: IDENTITY_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: identity.base.url
        - name: METADATA_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: metadata.base.url
        - name: SPARK_COMPUTATIONS_PATH
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: spark.path
        - name: HTTP_BIND_PORT
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: http.port
        - name: MQTT_BIND_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: mqtt.address
        - name: MQTT_BIND_PORT
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: mqtt.port
        - name: COAP_BIND_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: coap.address
        - name: COAP_BIND_PORT
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: coap.port
        - name: DATABASE_TYPE
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: database.type
        - name: ZOOKEEPER_ENABLED
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: zookeeper.enabled
        - name: ZOOKEEPER_URL
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: zookeeper.url
        - name: CASSANDRA_HOST
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: cassandra.host
        - name: CASSANDRA_PORT
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: cassandra.port
        - name: CASSANDRA_URL
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: cassandra.url
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: postgres.host
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: postgres.port
        - name: ADD_SCHEMA_AND_SYSTEM_DATA
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: schema.data
        - name: ADD_DEMO_DATA
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: demo.data
        - name: SPARK_JARS_BUCKET
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: spark.jars.bucket
        - name: ACTORS_COMPUTATION_LOCATION
          valueFrom:
            configMapKeyRef:
              name: tempus-config
              key: computation.location
        - name: AWS_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws
              key: accesskey
        - name: AWS_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: aws
              key: secretkey
        command:
        - sh
        - -c
        - /run-application.sh
