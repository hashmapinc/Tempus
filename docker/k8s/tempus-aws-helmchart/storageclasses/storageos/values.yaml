# Default values for storageos.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
image:
  repository: storageos/node
  tag: 1.0.1
  pullPolicy: IfNotPresent

initContainer:
  repository: storageos/init
  tag: 0.1
  pullPolicy: IfNotPresent

csiDriverRegistrar:
  repository: quay.io/k8scsi/driver-registrar
  tag: v0.2.0
  pullPolicy: IfNotPresent

csiExternalProvisioner:
  repository: quay.io/k8scsi/csi-provisioner
  tag: v0.3.0
  pullPolicy: Always

csiExternalAttacher:
  repository: quay.io/k8scsi/csi-attacher
  tag: v0.3.0
  pullPolicy: Always

rbacEnabled: true

cluster:
  # To generate a join token see:
  # https://docs.storageos.com/docs/install/prerequisites/clusterdiscovery
  # or use hostname/ip address of any or all of the cluster nodes.
  # Example:
  # join: node1,node2,node3
  # or
  # join: 10.1.5.07,10.1.5.08,10.1.5.09
  join:

  # sharedDir should be set if running kubelet in a container.  This should
  # be the path shared into to kubelet container, typically:
  # "/var/lib/kubelet/plugins/kubernetes.io~storageos".  If not set, defaults
  # will be used.
  sharedDir:
storageclass:
  name: fast
  pool: default
  fsType: ext4
api:
  secretName: storageos-api
  secretNamespace: storageos
  # secrets are namespace specific, create 1+N for every namespace.
  address: storageos:5705
  # address is used to generate the ApiAddress value in the secret. This
  # updated later with the service ClusterIP which is not known at this stage.
  username: storageos
  password: storageos
namespace: storageos
initSecretName: init-secret
service:
  name: storageos
  type: ClusterIP
  externalPort: 5705
  internalPort: 5705
resources: {}

## Configure the ingress resource that allows you to access the
## StorageOS API endpoints. Set up the URL
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## Set to true to enable ingress record generation
  enabled: false

  ## The list of hostnames to be covered with this ingress record.
  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
  hosts:
  - name: storageos.local

    ## Set this to true in order to enable TLS on the ingress record
    ## A side effect of this will be that the backend joomla service will be connected at port 443
    tls: false

    ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
    tlsSecret: storageos.local-tls

    ## Ingress annotations done as key:value pairs
    ## If you're using kube-lego, you will want to add:
    ## kubernetes.io/tls-acme: true
    ##
    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/annotations.md
    ##
    ## If tls is set to true, annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
    annotations:
    #  kubernetes.io/ingress.class: nginx
    #  kubernetes.io/tls-acme: true

  secrets:
  ## If you're providing your own certificates, please use this to add the certificates as secrets
  ## key and certificate should start with -----BEGIN CERTIFICATE----- or
  ## -----BEGIN RSA PRIVATE KEY-----
  ##
  ## name should line up with a tlsSecret set further up
  ## If you're using kube-lego, this is unneeded, as it will create the secret for you if it is not set
  ##
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  # - name: storageos.local-tls
  #   key:
  #   certificate:

csi:
  enable: false
  # provisionCreds are credentials for volume create and delete operations.
  provisionCreds:
    enable: false
    username: username1
    password: password1
    secretName: storageos-provision-creds
  # controllerPublishCreds are credentials for controller volume publish and unpublish operations.
  controllerPublishCreds:
    enable: false
    username: username2
    password: password2
    secretName: storageos-ctrl-publish-creds
  # nodeStageCreds are credentials for node volume stage operations.
  nodeStageCreds:
    enable: false
    username: username3
    password: password3
    secretName: storageos-node-stage-creds
  # nodePublishCreds are credentials for node volume publish operations.
  nodePublishCreds:
    enable: false
    username: username4
    password: password4
    secretName: storageos-node-publish-creds
